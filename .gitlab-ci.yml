stages:
  - infra
  - build
  - deploy
  - connection

infra_job:
  stage: infra
  before_script:
    - cd infra/terraform
  script:
    - echo $(pwd)
    - gitlab-terraform init
    - gitlab-terraform plan
    - |
      if [ $? -eq 0 ]; then 
        gitlab-terraform apply
      else
        echo "Terraform plan failed!"
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

build_frontend:
  stage: build
  before_script:
    - cd frontend
  script:
    - echo $(pwd)
    - npm install
    - npm run build
    - echo $(ls)
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  image: node:14-alpine
  artifacts:
    paths:
      - frontend/dist/

deploy_frontend:
  stage: deploy
  before_script:
    - cd frontend
  script:
    - echo $(pwd)
    - echo $(ls)
    - echo "verificar deploy en el bucket"
    - aws s3 cp dist/assets s3://frontend-c3-equipo3/assets --recursive
    - aws s3 cp dist/index.html s3://frontend-c3-equipo3
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  dependencies:
    - build_frontend

connection_backend:
  stage: connection
  before_script:
    - cd infra/scripts
  script:
    - echo $(pwd)
    - apt-get update
    - apt-get install -y openssh-client
    - echo "$SSH_PRIVATE_KEY" > private_key.pem
    - echo $(ls)
    - chmod 400 private_key.pem
    - ssh-keygen -R 3.133.253.103 ssh-keygen -f "/root/.ssh/known_hosts"
    - ssh -i private_key.pem -o IdentitiesOnly=yes ubuntu@3.133.253.103 'bash -s'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  image: ubuntu:mantic